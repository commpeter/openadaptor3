<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: ws-server.xml 1409 2008-04-29 10:00:19Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/trunk/example/spring/connectors/soap/ws-server.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor does the following...
    
    * invokes a webservice with optional parameters on a polling basis
    * writes data returned from the webservice to stdout
    
  It is designed to illustrate the basic structure of an adaptor that processes
  data by calling a webservice.

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config ws-polling.xml
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    lib/3rdparty/activation.jar
     
  To test the adaptor, the webservice it is connecting to needs to be running
  (see the ws-server.xml example or invoke your own webservice). 
  ]]></description>

  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
  	<property name="messageProcessor">
  	  <bean class="org.openadaptor.core.router.Router">
  		<property name="processors">
  		  <list>
  			<ref bean="webServicePoller" />
  		    <ref bean="writer" />
  		  </list>
  		 </property>
  	  </bean>
  	</property>
  </bean>

  <bean id="webServicePoller" class="org.openadaptor.auxil.connector.soap.WebServicePollingReadConnector">
    <description>This is a polling connector, that calls a webservice.</description>
    <property name="wsEndpoint" value="http://localhost:9999/OAService?wsdl"/>
	<property name="serviceName" value="process"/>
	<!-- An optional list of parameters. These should be declared with the 
		correct type, in the same order as the webservice parameters. -->
	<property name="parameters">
		<list>
			<value type="java.lang.String">TEST STRING</value>
			<value type="java.lang.Integer">12345</value>
			<value type="java.lang.Character">A</value>
			<value type="java.lang.Float">35.45</value>
		</list>
	</property>
  </bean>
  
  <bean id="writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector">
    <description>This is a write connector that writes to the console.</description>
  </bean>
  
</beans>
