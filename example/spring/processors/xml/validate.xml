<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<!--
    This adaptor does the following...
    
      * reads xml from stdin
      * validates the xml
      * writes to stdout
    
    It's intended to show you how to configured the Validator Pipe
    
    Run it like this...
    
      java org.openadaptor.spring.SpringApplication -config validate.xml -bean Adaptor
    
    You need the following in your classpath
  
      lib
      lib/openadaptor.jar
      lib/openadaptor-spring.jar
      lib/openadaptor-depends.jar
     
    Once it is running it will wait for command line input
    
    type something like this...
    
      <data>hello</data>
    
    ...and you should see it echo-ed
  
    type something which is not an xml doc with a element called data and the validation
    exception will be thrown
  
-->

<beans>

  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Pipeline">
        <property name="processors">
          <list>
            <ref bean="Reader"/>
            <ref bean="Validator"/>
            <ref bean="Writer"/>
          </list>
        </property>
      </bean>
    </property>
  </bean>    
  
  <bean id="Reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <property name="dataReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.string.LineReader"/>
    </property>
  </bean>
  
  <!-- This processor validates the data as an xml string -->
  <bean id="Validator" class="org.openadaptor.auxil.processor.xml.XmlValidator">
    <property name="schemaURL" value="schema.xsd"/>
  </bean>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>
