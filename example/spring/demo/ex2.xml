<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id: JavascriptFilter.xml 878 2007-10-01 15:13:56Z lachork $
  $HeadURL: https://openadaptor3.openadaptor.org/svn/openadaptor3/trunk/example/spring/processors/javascript/JavascriptFilter.xml $
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 
  <description><![CDATA[  
  This adaptor does the following...
    
    * reads all data in input/delim.txt
    * converts to orderedmaps
    * applies a simple filter to records
    * outputs to stdout
    
  It is designed to illustrate a simple use of a JavascriptFilterProcessor

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config JavascriptFilter.xml -bean Adaptor
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    
  writes to stdout
  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor"> 
    <description>
      This adaptor is designed to illustrate a simple use of a JavascriptFilterProcessor
        * reads all data in input/delim.txt
        * converts to ordered
        * applies a simple filter
        * outputs to stdout
    </description>
    <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Router">
        <property name="processors">
          <list>
            <ref bean="reader"/>
            <ref bean="orderedmap"/>
            <ref bean="jsFilter"/>
            <ref bean="dbBasedEnhancer"/>
            <ref bean="writer"/>
          </list>
        </property>
      </bean>
    </property>
  </bean>
  
  <bean id="reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <property name="filename" value="input/delim.txt"/>
  </bean>
  
  <bean id="orderedmap" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>Convert to OrderedMap providing fields names</description>
    <property name="fieldNames">
        <list>
            <value>username</value>
            <value>fullname</value>
            <value>uniqueid</value>
            <value>dob</value>
        </list>
    </property>
  </bean>
  
  <bean id="jsFilter" class="org.openadaptor.auxil.processor.javascript.JavascriptFilterProcessor">
    <description>
      Simple use of a JavascriptFilterProcessor. 
      Filter will discard any records with a fullname field starting with 'Terry'
    </description>
    <property name="script" value="record.get('fullname').indexOf('Terry') ==0"/>
  </bean>
  
  <bean id="dbReader" class="org.openadaptor.auxil.connector.jdbc.reader.JDBCReadConnector">
    <description>Reader which polls database using configured SQL.</description>
    <property name="jdbcConnection" ref="jdbcConnection"/>
    <property name="sql">
      <value>
        SELECT u.Qty as Quantity
        FROM USER u
        WHERE u.UserId = ?
      </value>
    </property>
  </bean>
  
  <bean id="jdbcConnection" class="org.openadaptor.auxil.connector.jdbc.JDBCConnection">
    <description>This defines jdbc connection.</description>
    <property name="driver" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:hsql://localhost/xdb"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>
  
  <bean id="dbBasedEnhancer" class="org.openadaptor.auxil.processor.GenericEnhancementProcessor">
     <property name="readConnector" ref="dbReader"/>
     <property name="parameterNames" value="uniqueid"/>
  </bean>
  
  <bean id="writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>  