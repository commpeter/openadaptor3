<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<!--
    Illustrates how to get the adaptor to "register" itself at start up.
    By defining the openadaptor.registration.url, the adaptor will post the resolved
    system properties of the adaptor at start up time.
    
    Typically the url is a jsp that will store these system props, thus enabling organisations
    which deploy openadaptor to maintain an inventory if it's use.
    
    The distibution may contain embedded properties, these cannot be overwritten
    using system properties. This enables custom distributions to enforce core behaviour,
    such as registration.
    
    The actual adaptor, simply reads stdin and writes to stdout.
-->

<beans>
  
  <!-- embed this in your config to get the adaptor to post it's system props to a jsp -->
  <bean id="SystemProperties" class="org.openadaptor.util.SystemProperties">
    <property name="properties">
      <props>
        <prop key="openadaptor.registration.url">http://foo.com/register.jsp</prop>
      </props>
    </property>
  </bean>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor" depends-on="SystemProperties">
    <property name="pipeline">
      <list>
        <ref bean="InPoint"/>
        <ref bean="OutPoint"/>
      </list>
    </property>
  </bean>

  <bean id="InPoint" class="org.openadaptor.auxil.connector.iostream.reader.StreamReadConnector">
    <property name="streamReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.FileReader"/>
    </property>
    <property name="recordReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.StringRecordReader"/>
    </property>
  </bean>
  
  <bean id="OutPoint" class="org.openadaptor.auxil.connector.iostream.writer.StreamWriteConnector">
    <property name="streamWriter">
      <bean class="org.openadaptor.auxil.connector.iostream.writer.FileWriter"/>
    </property>
  </bean>
  
</beans>