<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">
<beans>
  <description> 
    Illustrates how to get the adaptor to "register" itself at start up.
    By defining the oa3.registration.url, the adaptor will post the resolved
    system properties of the adaptor at start up time.
    
    Typically the url is a jsp that will store these system props, thus enabling organisations
    which deploy openadaptor to maintain an inventory if it's use.
    
    The distibution may contain embedded properties, these cannot be overwritten
    using system properties. This enables custom distributions to enforce core behaviour,
    such as registration.
    
    The actual adaptor, simply reads stdin and writes to stdout.
  </description>
  
  <bean id="SystemProperties" class="org.oa3.util.SystemProperties">
    <property name="properties">
      <props>
        <prop key="oa3.registration.url">http://foo.com/register.jsp</prop>
      </props>
    </property>
  </bean>
  
  <bean id="Adaptor" class="org.oa3.core.adaptor.Adaptor" depends-on="SystemProperties">
    <property name="routingMap" ref="RoutingMap"/>
  </bean>
  
  <bean id="RoutingMap" class="org.oa3.core.router.RoutingMap">
    <property name="processMap">
      <map>
        <entry key-ref="InPoint" value-ref="OutPoint"/>
      </map>
    </property>
  </bean>

  <bean id="InPoint" class="org.oa3.auxil.connector.iostream.reader.StreamReadConnector">
    <property name="streamReader">
      <bean class="org.oa3.auxil.connector.iostream.reader.FileReader"/>
    </property>
    <property name="recordReader">
      <bean class="org.oa3.auxil.connector.iostream.reader.StringRecordReader"/>
    </property>
  </bean>
  
  <bean id="OutPoint" class="org.oa3.auxil.connector.iostream.writer.StreamWriteConnector">
    <property name="streamWriter">
      <bean class="org.oa3.auxil.connector.iostream.writer.FileWriter"/>
    </property>
  </bean>
  
</beans>