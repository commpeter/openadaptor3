<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 
  <description><![CDATA[
    $Id$
    $HeadURL$
  
    This example adaptor illustrates the basic steps in generating json text.
    
      * reads a file consisting of rows of comma separated values.
      * converts it into OrderedMaps
      * converts from OrderedMaps to JSON
      * writes text to stdout
    
    Run it like this...
    
      java org.openadaptor.spring.SpringApplication -config tojson.xml -bean Adaptor
    
    You need the following in your classpath
  
      lib
      lib/openadaptor.jar
      lib/openadaptor-spring.jar
      lib/openadaptor-depends.jar
  ]]></description>
    
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor"> 
    <description>Define the basic adaptor pipeline</description>
     <property name="messageProcessor">
      <bean class="org.openadaptor.core.router.Pipeline">
        <property name="processors">
          <list>
            <ref bean="reader"/>
            <ref bean="toorderedmap"/>
            <ref bean="tojson"/>
            <ref bean="writer"/>
          </list>
        </property>
      </bean>
    </property>    
  </bean> 
  
  <bean id="reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <description>Read a comma delimited file line by line</description>
    <property name="filename" value="input/delim.csv"/>
    <property name="dataReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.string.LineReader"/>
    </property>
  </bean>

  <bean id="toorderedmap" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>Convert to OrderedMap providing fields names.</description>
    <property name="fieldNames">
        <list>
            <value>username</value>
            <value>fullname</value>
            <value>uniqueid</value>
            <value>dob</value>
        </list>
    </property>
  </bean>

  <!-- Convert to JSON using defulat property settings -->
  <bean id="tojson" class="org.openadaptor.thirdparty.json.OrderedMapToJSONConvertor"/>

  <!-- Write to file relying on asString to do the right thing -->
  <bean id="writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>