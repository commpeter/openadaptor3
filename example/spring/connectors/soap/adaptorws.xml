<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id$
  $HeadURL$
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This adaptor does the following...
    
    * exposes a webservice that clients can send data to
    * writes data to stdout
    
  It is designed to illustrate the basic structure of exposing an adaptor as a
  web service, typically you want to do this to allow a non java application
  use openadaptor functionality.

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config adaptorws.xml -bean Adaptor
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    lib/3rdparty/activation.jar
     
  Once it is running it will echo the webservice endpoint to the log, you can put
  this into a web browser and verify that you can see the wsdl.
  
  To test it fully you can run the other example which processes data by invoking
  a webservice.
  ]]></description>

  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
  	<property name="messageProcessor">
  		<bean class="org.openadaptor.core.router.Router">
  			<property name="processors">
  				<list>
  					<ref bean="WebService" />
  					<ref bean="Writer" />
  				</list>
  			</property>
  		</bean>
  	</property>
  </bean>

  <bean id="WebService" class="org.openadaptor.auxil.connector.soap.WebServiceListeningReadConnector">
    <description>This is a read connector, that exposes a webservice.</description>
    <property name="serviceName" value="MyService"/>
    <property name="port" value="9999"/>
  </bean>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
</beans>
