<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id$
  $HeadURL$
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
  <description><![CDATA[    
  This example relies on a hypersonic database running (http://www.hsqldb.org) to run
  up the server make sure hsqldb.jar is in your class path and run the following...
  
    java org.hsqldb.Server -database.0 hsql -dbname.0 xdb
   
  This adaptor does the following...
    
    * reads data from stdin
    * inserts data into an test table
    
  It is designed to illustrate the basic structure of an adaptor that writes to a database

  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config writer3.xml -bean Adaptor
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    lib/3rdparty/hsqldb.jar
    
  once running any data that read from std input is written into the test table.
  ]]></description>
  
 <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
   <property name="messageProcessor" ref="Pipeline"/>
  </bean>
  
  <bean id="Pipeline" class="org.openadaptor.core.router.Router">
    <description>
      This creates the simple pipeline Reader -> MapConverter -> Writer.
    </description>
    <property name="processors">
      <list>
        <ref bean="Reader"/>
        <ref bean="MapConverter"/>
        <ref bean="Writer"/>
      </list>
    </property>
  </bean>
  
  <bean id="Reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector"/>
  
  <bean id="MapConverter" class="org.openadaptor.auxil.convertor.delimited.DelimitedStringToOrderedMapConvertor">
    <description>Converts intput into an ordered map with single field called data.</description>
    <property name="fieldNames">
      <list>
        <value>data</value>
      </list>
    </property>
  </bean>

  <!-- This defines jdbc connection -->
  <bean id="JdbcConnection" class="org.openadaptor.auxil.connector.jdbc.JDBCConnection">
    <property name="driver" value="org.hsqldb.jdbcDriver"/>
    <property name="url" value="jdbc:hsqldb:hsql://localhost/xdb"/>
    <property name="username" value="sa"/>
    <property name="password" value=""/>
  </bean>

  <!-- Writer which inserts a row into a test table -->
  <bean id="Writer" class="org.openadaptor.auxil.connector.jdbc.writer.JDBCWriteConnector">
    <property name="jdbcConnection" ref="JdbcConnection"/>
    <property name="statementConverter">
      <bean class="org.openadaptor.auxil.connector.jdbc.writer.orderedmap.TableStatementConverter">
        <!-- the table name we want to insert a row for -->
        <property name="tableName" value="TESTOUTPUT"/>
        <!-- mapping between incoming ordered map attribubtes and table column names -->
        <property name="mapping">
          <map>
            <entry key="data" value="VALUE"/>
          </map>
        </property>
      </bean>
    </property>

  </bean>

</beans>