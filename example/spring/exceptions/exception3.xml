<?xml version="1.0" encoding="UTF-8"?>
<!-- 
  $Id$
  $HeadURL$
 -->
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 
  <description><![CDATA[  
  This adaptor does the following...
    
    * reads xml from stdin
    * validates the xml
    * writes to stdout
    
  Validation failures are trapped and sent to centralised exception manager (via soap)
    
  Run it like this...
    
    java org.openadaptor.spring.SpringAdaptor -config exception3.xml -bean Adaptor
    
  You need the following in your classpath
  
    lib
    lib/openadaptor.jar
    lib/openadaptor-spring.jar
    lib/openadaptor-depends.jar
    lib/3rdparty/activation.jar
     
  Once it is running it will wait for command line input
    
  type something like this...
   
    <data>hello</data>
    
  ...and you should see it echo-ed
  
  type something which is not an xml doc with a element called data and the validation
  exception will be caught and sent to exception manager.
  
  For this to work you need to run an exception manager, this is a standalone process that
  exposes a webservice to accept exceptions and exposes a servlet interface to browse the
  exception store. The following will start a FileSystemExceptionManager storing error records
  in a directory eman.
  
     java org.openadaptor.auxil.exception.file.FileSystemExceptionManager -dir eman -port 9999
  
  this requires you to have activation.jar and mail.jar in your classpath. 
  You browse the exception store using this url
  
    http://localhost:9999/admin
  
  there are 2 users test/password and testadmin/password
  ]]></description>
  
  <bean id="Adaptor" class="org.openadaptor.core.adaptor.Adaptor">
    <property name="messageProcessor" ref="Pipeline"/>
  </bean>
  
  <bean id="Pipeline" class="org.openadaptor.core.router.Pipeline">
    <property name="processors">
      <list>
        <ref bean="Reader"/>
        <ref bean="Validator"/>
        <ref bean="Writer"/>
      </list>
    </property>
    <property name="exceptionProcessor" ref="ExceptionProcessor">
      <description>this routes any exception to the global exception processor</description>
    </property>
  </bean>

  <bean id="Reader" class="org.openadaptor.auxil.connector.iostream.reader.FileReadConnector">
    <property name="dataReader">
      <bean class="org.openadaptor.auxil.connector.iostream.reader.string.LineReader"/>
    </property>
  </bean>
  
  <bean id="Validator" class="org.openadaptor.auxil.processor.xml.XmlValidator">
    <property name="schemaURL" value="input/schema.xsd"/>
  </bean>
  
  <bean id="Writer" class="org.openadaptor.auxil.connector.iostream.writer.FileWriteConnector"/>
  
  <!-- Exception processor component -->
  <bean id="ExceptionProcessor" class="org.openadaptor.auxil.exception.ExceptionMessageProcessor">
    <property name="from" value="TestAdaptor">
      <description>identifies where the exception is from</description>
    </property>
    <property name="endpoint" value="http://localhost:9999/soap/ExceptionManager?wsdl">
      <description>the webservice that exceptions will be routed to</description>
    </property>
    <property name="remoteMethodName" value="process"/>
  </bean>
  
</beans>